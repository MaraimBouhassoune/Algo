Réponses synthétiques aux 10 questions d’analyse
TRIS
Différence prix vs surface ?
Les temps et le nombre de comparaisons sont quasiment identiques : la distribution des deux colonnes est assez semblable, donc l’ordre de difficulté à trier ne varie pas vraiment. Les écarts (< 10 %) tiennent au fait que certaines valeurs (prix surtout) contiennent plus de doublons, ce qui allège légèrement le tri rapide/fusion.

Algorithme le plus rapide sur 1 000 biens ?
- Tri Fusion ≈ 0,0057 s
- Tri Rapide ≈ 0,0060 – 0,0072 s
Sélection et Insertion sont respectivement ~0,16 s et ~0,10 s.
Le classement est le même pour prix et surface.

Fusion plus stable que Rapide ?
Oui : en relançant plusieurs fois, Fusion conserve toujours l’ordre initial des biens ex‑æquo, alors que Rapide les réordonne différemment (pivot = dernier élément ➜ tri instable).

Pour trier 10 000 annonces ?
Recommander Tri Fusion : complexité O(n log n) garantie, stabilité précieuse pour une interface (maintient l’ordre d’affichage des biens ex‑æquo). Rapide est souvent aussi vite mais peut dégrader au pire cas.

Écart O(n²) vs O(n log n) observé ?
Insertion 1 000 → 0,10 s vs Fusion 0,006 s (≈ ×17). À 10 000 éléments on extrapole un facteur > ×100, preuve concrète de la différence de complexité.

RECHERCHES
Maisons à Paris (500 vs 1 000) & temps ?

500 éléments : 10 maisons, 500 comparaisons, ~0 s

1 000 éléments : 17 maisons, 999 comparaisons, 0,0006 s
Temps linéaire proportionnel ; doubler n multiplie le temps comparativement par ≈2.

Binaire 350 000 € plus rapide que linéaire ? Par quel facteur ?
Sur 1 000 éléments : 7 comparaisons contre 999.
Facteur ≈ 999 / 7 ≈ ×140 économies de comparaisons (log₂ n vs n).

Prix m² min / max et villes ?
- Min : 985 €/m² (biens en province : petites communes rurales).
- Max : 13 785 €/m² (Paris ou proche‑couronne).
→ Variation de 12 800 €/m² entre extrêmes.

Pourquoi binaire pas adaptée pour compter tous les 3 pièces ?
Même dans un tableau trié sur un autre critère (prix/surface), les appartements 3 pièces ne sont pas contigus ; la binaire ne trouve qu’une position. Il faut ensuite balayer autour ou refaire un parcours complet. Une recherche linéaire (ou filtrage sur index) est plus simple.

RÉFLEXION
Algorithmes pour un site immobilier

Trier par prix croissant : Tri Fusion en back‑end (stable) ou index DB ORDER BY (merge‑sort interne).

Rechercher par ville : table de hachage / index SQL sur la colonne « commune ».

Filtrer par nombre de pièces : filtrage linéaire sur la liste déjà limitée, ou index multi‑clé (ville + pièces).
Afficher min/max prix : un scan unique sur la collection ou requêtes SQL MIN(prix), MAX(prix).
